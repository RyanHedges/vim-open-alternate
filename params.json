{"name":"vim-open-alternate","tagline":"Vim plugin that makes it trivial to jump between alternate files (test files & implementation, etc.)","body":"# open-alternate.vim\r\n\r\n*Bringing alternate file opening to the forefront*\r\n\r\n## What it provides?\r\n\r\nThis plugin provides a simple solution for opening alternate files\r\nintelligently in [vim](http://www.vim.org). It does this by providing a\r\nuser-command called `OpenAlternate` which when executed will open the\r\nalternate file to the currently opened file.\r\n\r\n### Supported File Types\r\n\r\nCurrently, this plugin supports the following list of file types.\r\n\r\n<table>\r\n  <tr>\r\n    <th>\r\n      Current File\r\n    </th>\r\n    <th>\r\n      Alternate File\r\n    </th>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      RSpec File\r\n    </td>\r\n    <td>\r\n      Ruby Implementation file (includes logic for Ruby on Rails)\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      Ruby Implementation File\r\n    </td>\r\n    <td>\r\n      RSpec file (includes logic for Ruby on Rails)\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      Cucumber Feature File\r\n    </td>\r\n    <td>\r\n      Cucumber Step Definition file\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      Cucumber Step Definition File\r\n    </td>\r\n    <td>\r\n      Cucumber Feature file\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n## Installation\r\n\r\nIf you don't have a preferred installation method, I recommend installing\r\n[pathogen.vim](https://github.com/tpope/vim-pathogen) and using it in\r\ncombination with [git\r\nsubmodules](http://git-scm.com/book/en/Git-Tools-Submodules) as describe in\r\nthis [Vimcast - Synchronizing plugins with git submodules and\r\npathogen](http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen/).\r\n\r\nIf your installation method is the above recommended one, it should be as\r\nsimple as running the following commands:\r\n\r\n    cd ~/.vim/\r\n    git submodule add git@github.com:cyphactor/vim-open-alternate.git bundle/vim-open-alternate\r\n    git add .\r\n    git commit -m \"Added vim-open-alternate plugin to my setup.\"\r\n\r\nIf you are using another method, you are on your own. I have been told that\r\nthis plugin is compatible with [Vundle](http://github.com/gmarik/vundle)\r\nbut I have not tested it myself.\r\n\r\n## Configuration\r\n\r\nThe recommended configuration for this plugin is to simply map a key combo to\r\nrun the `OpenAlternate` command for you. This can easily be done by adding the\r\nfollowing to your `~/.vimrc`.\r\n\r\n    nnoremap <leader>. :OpenAlternate<cr>\r\n\r\nIn the above example I map my normal mode `<leader>.` key combo to execute the\r\n`OpenAlternate` command, in turn opening the alternate file for editing.\r\n\r\nYou can of course map this command anyway you like, or even choose not to map\r\nit and just execute the command as follows when you need it.\r\n\r\n    :OpenAlternate<cr>\r\n\r\n## Credits\r\n\r\nI took the idea for my `<leader>.` binding and some logic for opening the\r\nalternate file from Gary Bernhardt's vim setup. I also took bits and pieces of\r\nfile path conversions for alternate files from numerios friends `.vimrc`\r\nfiles. Therefore, credit must go out to Gary Bernhardt for a reasonable\r\nstarting point as well as my numerous friends for sharing their alternate\r\nfile path conversions with me.\r\n\r\n## License\r\n\r\nCopyright (c) Andrew De Ponte. Distributed under the same terms as Vim itself.\r\nSee `:help license`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}